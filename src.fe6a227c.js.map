{"version":3,"sources":["js/app.js","index.js"],"names":["partScreen1","document","getElementById","partScreen2","startLink","partTime","querySelector","listOfTime","timeTableSet","desk","colors","timeTable","score","id","onDescClick","event","target","classList","contains","remove","createCircle","startAgain","onStartClick","add","onListOfTimeClick","time","parseInt","getAttribute","clearDescAndShowTime","timeSet","setInterval","timeDecrease","innerHTML","gameOver","currentTime","circle","createElement","color","getRandomColor","size","getRandomNumber","style","width","height","backgroundColor","boxShadow","getBoundingClientRect","x","y","top","left","appendChild","min","max","Math","round","random","parentNode","index","floor","length","clearInterval","addEventListener"],"mappings":";;;AAAA,MAAMA,EAAcC,SAASC,eAAe,eACtCC,EAAcF,SAASC,eAAe,eACtCE,EAAYH,SAASC,eAAe,MACpCG,EAAWJ,SAASK,cAAc,gBAClCC,EAAaN,SAASK,cAAc,eACpCE,EAAeP,SAASK,cAAc,SACtCG,EAAOR,SAASK,cAAc,SAC9BI,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAEvE,IAAIC,EAAY,EACZC,EAAQ,EACRC,EAAK,GAMT,SAASC,EAAYC,GACfA,EAAMC,OAAOC,UAAUC,SAAS,YAClCN,GAAS,EACTG,EAAMC,OAAOG,SACbC,KAEEL,EAAMC,OAAOC,UAAUC,SAAS,YAClCG,IAIJ,SAASC,IACPtB,EAAYiB,UAAUM,IAAI,MAG5B,SAASC,EAAkBT,GACpBA,EAAMC,OAAOC,UAAUC,SAAS,iBAGrCO,KAAOC,SAASX,EAAMC,OAAOW,aAAa,cAC1CxB,EAAYc,UAAUM,IAAI,MAC1BK,IACAC,EAAQJ,MACRZ,EAAKiB,YAAYC,EAAc,KAE/BX,KAGF,SAASS,EAAQJ,GACfjB,EAAawB,gBAAkBP,IAGjC,SAASM,IACHN,GAAS,IAATA,KACFQ,QACK,CACDC,IAAAA,IAAgBT,KAEhBS,EAAc,KAChBA,MAAkBA,KAEpBL,EAAQK,IAIZ,SAASd,IACDe,MAAAA,EAASlC,SAASmC,cAAc,OAChCC,EAAQC,IAERC,EAAOC,EAAgB,GAAI,IAEjCL,EAAOM,MAAMC,SAAWH,MACxBJ,EAAOM,MAAME,UAAYJ,MACzBJ,EAAOM,MAAMG,gBAAkBP,EAC/BF,EAAOM,MAAMI,qBAAuBR,cAAkBA,IACtDF,EAAOlB,UAAUM,IAAI,UAEf,MAAA,MAAEmB,EAAF,OAASC,GAAWlC,EAAKqC,wBAEzBC,EAAIP,EAAgB,EAAGE,EAAQH,GAC/BS,EAAIR,EAAgB,EAAGG,EAASJ,GAEtCJ,EAAOM,MAAMQ,OAASD,MACtBb,EAAOM,MAAMS,QAAUH,MACvBtC,EAAK0C,YAAYhB,GAGnB,SAASK,EAAgBY,EAAKC,GACrBC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,GAGlD,SAASnB,IACPzB,EAAaiD,WAAWxC,UAAUM,IAAI,QACtCd,EAAKuB,oEACgDpB,iEAGrDH,EAAKQ,UAAUM,IAAI,UAErB,SAASe,IACDoB,MAAAA,EAAQJ,KAAKK,MAAML,KAAKE,SAAW9C,EAAOkD,QACzClD,OAAAA,EAAOgD,GAEhB,SAASrC,IACPZ,EAAKQ,UAAUE,OAAO,UACtBhB,EAAYc,UAAUE,OAAO,MAC7BnB,EAAYiB,UAAUE,OAAO,MAE7BR,EAAY,EACZC,EAAQ,EAEV,SAASgB,IACPnB,EAAKuB,UAAY,GACjBxB,EAAaiD,WAAWxC,UAAUE,OAAO,QACzC0C,cAAchD,GAlGhBT,EAAU0D,iBAAiB,QAASxC,GACpCf,EAAWuD,iBAAiB,QAAStC,GACrCf,EAAKqD,iBAAiB,QAAShD;;ACd/B,aADA,QAAA,oBACA,QAAA","file":"src.fe6a227c.js","sourceRoot":"../src","sourcesContent":["const partScreen1 = document.getElementById('partScreen1');\nconst partScreen2 = document.getElementById('partScreen2');\nconst startLink = document.getElementById('go');\nconst partTime = document.querySelector('#partScreen1');\nconst listOfTime = document.querySelector('.listOfTime');\nconst timeTableSet = document.querySelector('#time');\nconst desk = document.querySelector('.desk');\nconst colors = ['#ff8c8c', '#8cb8ff', '#a3ffb3', '#dbb44f', '#cb8cff', '#ff78ac'];\n\nlet timeTable = 0;\nlet score = 0;\nlet id = '';\n\nstartLink.addEventListener('click', onStartClick);\nlistOfTime.addEventListener('click', onListOfTimeClick);\ndesk.addEventListener('click', onDescClick);\n\nfunction onDescClick(event) {\n  if (event.target.classList.contains('circle')) {\n    score += 1;\n    event.target.remove(); // убраем целевой элемент и вызыаем функцию создания нового кружка\n    createCircle();\n  }\n  if (event.target.classList.contains('restart')) {\n    startAgain();\n  }\n}\n\nfunction onStartClick() {\n  partScreen1.classList.add('up');\n}\n\nfunction onListOfTimeClick(event) {\n  if (!event.target.classList.contains('time-button')) {\n    return;\n  }\n  time = parseInt(event.target.getAttribute('data-time'));\n  partScreen2.classList.add('up');\n  clearDescAndShowTime();\n  timeSet(time);\n  id = setInterval(timeDecrease, 1000);\n\n  createCircle();\n}\n\nfunction timeSet(time) {\n  timeTableSet.innerHTML = `00:${time}`;\n}\n\nfunction timeDecrease() {\n  if (time === 0) {\n    gameOver();\n  } else {\n    let currentTime = --time;\n\n    if (currentTime < 10) {\n      currentTime = `0${currentTime}`;\n    }\n    timeSet(currentTime);\n  }\n}\n\nfunction createCircle() {\n  const circle = document.createElement('div');\n  const color = getRandomColor();\n\n  const size = getRandomNumber(20, 70);\n\n  circle.style.width = `${size}px`;\n  circle.style.height = `${size}px`;\n  circle.style.backgroundColor = color;\n  circle.style.boxShadow = `0 0 2px ${color},0 0 10px ${color}`;\n  circle.classList.add('circle');\n\n  const { width, height } = desk.getBoundingClientRect(); //возвращает размер элемента и его позицию относительно viewport\n\n  const x = getRandomNumber(0, width - size); // отнимаем размер шарика чтобы он не вылазил за границы доски\n  const y = getRandomNumber(0, height - size); // отнимаем размер шарика чтобы он не вылазил за границы доски\n\n  circle.style.top = `${y}px`;\n  circle.style.left = `${x}px`;\n  desk.appendChild(circle);\n}\n\nfunction getRandomNumber(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nfunction gameOver() {\n  timeTableSet.parentNode.classList.add('hide'); //убираем родителя текущего элемента\n  desk.innerHTML = `\n  <h2 class=\"result-title\">Cчет: <span class=\"score\">${score}</span></h2>\n\n  <a href='#' class='restart'>Start again</a>`;\n  desk.classList.add('isOver');\n}\nfunction getRandomColor() {\n  const index = Math.floor(Math.random() * colors.length);\n  return colors[index];\n}\nfunction startAgain() {\n  desk.classList.remove('isOver');\n  partScreen2.classList.remove('up');\n  partScreen1.classList.remove('up');\n\n  timeTable = 0;\n  score = 0;\n}\nfunction clearDescAndShowTime() {\n  desk.innerHTML = '';\n  timeTableSet.parentNode.classList.remove('hide');\n  clearInterval(id);\n}\n","import './sass/main.scss';\nimport './js/app.js';\n"]}